# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-12-17 19:55
from __future__ import unicode_literals

import HumanResources.models
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ERP', '__first__'),
        ('SharedCatalogs', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbsenceProof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to=HumanResources.models.uploaded_absences_proofs, verbose_name='Documento')),
                ('description', models.CharField(blank=True, max_length=4096, verbose_name='Descripci\xf3n')),
            ],
        ),
        migrations.CreateModel(
            name='AccessToDirection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Acceso a Direcci\xf3n',
                'verbose_name_plural': 'Accesos a Direcci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='\xc1rea')),
            ],
            options={
                'verbose_name': '\xc1rea',
                'verbose_name_plural': '\xc1reas',
            },
        ),
        migrations.CreateModel(
            name='CheckerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checks_entry', models.BooleanField(default=True, verbose_name='Checa Entrada')),
                ('checks_exit', models.BooleanField(default=True, verbose_name='Checa Salida')),
            ],
            options={
                'verbose_name': 'Datos de Checador del Empleado',
                'verbose_name_plural': 'Datos de Checador del Empleado',
            },
        ),
        migrations.CreateModel(
            name='CurrentEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Sin Estudios'), (2, 'Primaria'), (3, 'Secundaria'), (4, 'Preparatoria'), (5, 'T\xe9cnico'), (6, 'Certificaci\xf3n'), (7, 'Licenciatura (Trunca)'), (8, 'Licenciatura (Sin T\xedtulo)'), (9, 'Licenciatura (T\xedtulo)'), (10, 'Especialidad'), (11, 'Maestr\xeda'), (12, 'Doctorado')], default=1, verbose_name='Tipo de Educaci\xf3n')),
                ('name', models.CharField(max_length=2048, verbose_name='Nombre de la formaci\xf3n*')),
                ('institution', models.CharField(max_length=1024, verbose_name='Instituci\xf3n*')),
                ('sunday', models.BooleanField(default=False, verbose_name='Domingo')),
                ('monday', models.BooleanField(default=False, verbose_name='Lunes')),
                ('tuesday', models.BooleanField(default=False, verbose_name='Martes')),
                ('wednesday', models.BooleanField(default=False, verbose_name='Mi\xe9rcoles')),
                ('thursday', models.BooleanField(default=False, verbose_name='Jueves')),
                ('friday', models.BooleanField(default=False, verbose_name='Viernes')),
                ('saturday', models.BooleanField(default=False, verbose_name='S\xe1bado')),
            ],
            options={
                'verbose_name': 'Formaci\xf3n Acad\xe9mica Actual del Empleado',
                'verbose_name_plural': 'Formaci\xf3n Acad\xe9mica Actual del Empleado',
            },
        ),
        migrations.CreateModel(
            name='CurrentEducationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=HumanResources.models.upload_employee_current_education_document, verbose_name='Archivo')),
                ('comments', models.CharField(blank=True, max_length=2048, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Comentarios')),
                ('current_education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.CurrentEducation', verbose_name='Formaci\xf3n Actual del Empleado*')),
            ],
            options={
                'verbose_name': 'Documento de la Formaci\xf3n Actual del Empleado',
                'verbose_name_plural': 'Documentos de la Formaci\xf3n Actual del Empleado',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Departamento')),
                ('area', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Area', verbose_name='\xc1rea*')),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Direcci\xf3n')),
                ('colony', models.CharField(max_length=255, verbose_name='Colonia*')),
                ('street', models.CharField(max_length=255, verbose_name='Calle*')),
                ('outdoor_number', models.CharField(max_length=10, verbose_name='No. Exterior*')),
                ('indoor_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='No. Interior')),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='C\xf3digo Postal*')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Pais', verbose_name='Pa\xeds*')),
                ('internal_company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.InternalCompany', verbose_name='Empresa')),
                ('state', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='country', chained_model_field='pais', on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Estado', verbose_name='Estado*')),
                ('town', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='state', chained_model_field='estado', on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Municipio', verbose_name='Municipio*')),
            ],
            options={
                'verbose_name': 'Direcci\xf3n',
                'verbose_name_plural': 'Direcciones',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tipo de Documento')),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documento',
            },
        ),
        migrations.CreateModel(
            name='EarningDeductionPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Periodo Percepci\xf3n / Deducci\xf3n',
                'verbose_name_plural': 'Periodo Percepci\xf3n / Deducci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='EarningsDeductions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
                ('percent_taxable', models.IntegerField(verbose_name='Porcentaje Gravable*')),
                ('sat_key', models.CharField(max_length=30, verbose_name='Clave SAT*')),
                ('status', models.CharField(choices=[('A', 'ACTIVA'), ('N', 'NO ACTIVA')], default='A', max_length=1, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Estatus*')),
                ('comments', models.TextField(blank=True, max_length=500, null=True, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Observaciones')),
                ('type', models.CharField(choices=[('D', 'Deducci\xf3n'), ('P', 'Percepci\xf3n')], default='D', max_length=1, verbose_name='Tipo*s')),
                ('taxable', models.CharField(choices=[('Y', 'Si'), ('N', 'No')], default='N', max_length=1, verbose_name='Gravable*')),
                ('category', models.CharField(choices=[('F', 'Fija'), ('V', 'Variable')], default='F', max_length=1, verbose_name='Categoria*')),
                ('penalty', models.CharField(choices=[('Y', 'Si'), ('N', 'No')], default='N', max_length=1, verbose_name='Penalizaci\xf3n')),
                ('account', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Account', verbose_name='Cuenta*')),
            ],
            options={
                'verbose_name': 'Percepciones y Deducciones',
                'verbose_name_plural': 'Percepciones y Deducciones',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Sin Estudios'), (2, 'Primaria'), (3, 'Secundaria'), (4, 'Preparatoria'), (5, 'T\xe9cnico'), (6, 'Certificaci\xf3n'), (7, 'Licenciatura (Trunca)'), (8, 'Licenciatura (Sin T\xedtulo)'), (9, 'Licenciatura (T\xedtulo)'), (10, 'Especialidad'), (11, 'Maestr\xeda'), (12, 'Doctorado')], default=1, verbose_name='Tipo de Educaci\xf3n')),
                ('name', models.CharField(max_length=2048, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre de la Profesi\xf3n*')),
                ('institution', models.CharField(max_length=1024, verbose_name='Instituci\xf3n*')),
                ('license_code', models.CharField(blank=True, max_length=512, null=True, verbose_name='C\xf3digo o N\xfamero de C\xe9dula')),
                ('evidence', models.FileField(blank=True, null=True, upload_to=HumanResources.models.upload_employee_education_document, verbose_name='Comprobante')),
            ],
            options={
                'verbose_name': 'Formaci\xf3n Acad\xe9mica del Empleado',
                'verbose_name_plural': 'Formaci\xf3n Acad\xe9mica del Empleado',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
                ('first_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Paterno*')),
                ('second_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Materno*')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='N\xfamero de Tel\xe9fono')),
                ('cellphone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='N\xfamero de Celular')),
                ('email', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Tu correo electr\xf3nico no es correcto.', regex="\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*")], verbose_name='Correo Electr\xf3nico')),
                ('colony', models.CharField(max_length=255, verbose_name='Colonia*')),
                ('street', models.CharField(max_length=255, verbose_name='Calle*')),
                ('outdoor_number', models.CharField(max_length=10, verbose_name='No. Exterior*')),
                ('indoor_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='No. Interior')),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='C\xf3digo Postal*')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Pais', verbose_name='Pa\xeds')),
            ],
            options={
                'verbose_name': 'Contacto de Emergencia',
                'verbose_name_plural': 'Contactos de Emergencia',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_key', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='El RFC que proporcionas es incorrecto.', regex='^([A-Z\xd1&]{3,4}) ?(?:- ?)?(\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])) ?(?:- ?)?([A-Z\\d]{2})([A\\d])$')], verbose_name='Clave (RFC)*')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
                ('first_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Paterno*')),
                ('second_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Materno*')),
                ('photo', models.FileField(upload_to=HumanResources.models.upload_employee_photo, verbose_name='Foto*')),
                ('type', models.IntegerField(choices=[(1, 'Administrativo'), (2, 'Operativo')], default=1, verbose_name='Tipo de Empleado')),
                ('registry_date', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Registro*')),
                ('status', models.IntegerField(choices=[(1, 'Activo'), (2, 'Inactivo')], default=1, verbose_name='Estatus del Empleado')),
                ('birthdate', models.DateField(verbose_name='Fecha de Nacimiento*')),
                ('birthplace', models.CharField(max_length=255, verbose_name='Lugar de Nacimiento*')),
                ('gender', models.IntegerField(choices=[(1, 'Femenino'), (2, 'Masculino')], default=1, verbose_name='G\xe9nero')),
                ('marital_status', models.IntegerField(choices=[(1, 'Soltero'), (2, 'Casado'), (3, 'Uni\xf3n Libre'), (4, 'Divorciado'), (5, 'Viudo')], default=1, verbose_name='Estado Civil')),
                ('curp', models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(message='La CURP que proporcionas es incorrecta.', regex='^[A-Z]{1}[AEIOU]{1}[A-Z]{2}[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[HM]{1}(AS|BC|BS|CC|CS|CH|CL|CM|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|NE)[B-DF-HJ-NP-TV-Z]{3}[0-9A-Z]{1}[0-9]{1}$')], verbose_name='CURP*')),
                ('rfc', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='El RFC que proporcionas es incorrecto.', regex='^([A-Z\xd1&]{3,4}) ?(?:- ?)?(\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])) ?(?:- ?)?([A-Z\\d]{2})([A\\d])$')], verbose_name='RFC*')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Tel\xe9fono*')),
                ('cellphone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Celular')),
                ('office_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Tel\xe9fono de Oficina')),
                ('extension_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='N\xfamero de Extensi\xf3n')),
                ('personal_email', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Tu correo electr\xf3nico no es correcto.', regex="\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*")], verbose_name='Correo Electr\xf3nico Personal*')),
                ('work_email', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Tu correo electr\xf3nico no es correcto.', regex="\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*")], verbose_name='Correo Electr\xf3nico Laboral')),
                ('social_security_number', models.CharField(max_length=20, verbose_name='N\xfamero de P\xf3liza de Seguro*')),
                ('social_security_type', models.CharField(max_length=100, null=True, verbose_name='Tipo de Seguro')),
                ('colony', models.CharField(max_length=255, verbose_name='Colonia*')),
                ('street', models.CharField(max_length=255, verbose_name='Calle*')),
                ('outdoor_number', models.CharField(max_length=10, verbose_name='No. Exterior*')),
                ('indoor_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='No. Interior')),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='C\xf3digo Postal*')),
                ('blood_type', models.IntegerField(choices=[(1, 'A+'), (2, 'A-'), (3, 'B+'), (4, 'B-'), (5, 'O+'), (6, 'O-'), (7, 'AB+'), (8, 'AB-')], default=1, verbose_name='Tipo Sangu\xedneo')),
                ('driving_license_number', models.CharField(blank=True, max_length=20, verbose_name='N\xfamero de Licencia de Conducir')),
                ('driving_license_expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiraci\xf3n de Licencia para Conducir')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Pais', verbose_name='Pa\xeds*')),
                ('state', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='country', chained_model_field='pais', on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Estado', verbose_name='Estado*')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAssistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('entry_time', models.TimeField(default=django.utils.timezone.now, verbose_name='Hora de Entrada')),
                ('exit_time', models.TimeField(default=django.utils.timezone.now, verbose_name='Hora de Salida')),
                ('absence', models.BooleanField(default=True, verbose_name='Ausente')),
                ('justified', models.BooleanField(default=False, verbose_name='Justificada')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
            },
        ),
        migrations.CreateModel(
            name='EmployeeContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_key', models.CharField(max_length=64, unique=True, verbose_name='Clave del Contrato')),
                ('contract_type', models.CharField(choices=[('P', 'Permanente'), ('T', 'Temporal')], default='P', max_length=1, verbose_name='Tipo de Contrato')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=4096, null=True, verbose_name='Descripci\xf3n')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha de T\xe9rmino')),
                ('contract_file', models.FileField(null=True, upload_to=HumanResources.models.upload_employee_contract, verbose_name='Contrato Escaneado')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to=HumanResources.models.upload_employee_document, verbose_name='Archivo*')),
                ('comments', models.CharField(max_length=2048, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Comentarios*')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.DocumentType', verbose_name='Tipo de Documento*')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Documento Probatorio',
                'verbose_name_plural': 'Documentos Probatorios',
            },
        ),
        migrations.CreateModel(
            name='EmployeeDropOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha de Baja*')),
                ('type', models.IntegerField(choices=[(1, 'T\xe9rmino de Contrato'), (2, 'Separaci\xf3n Voluntaria'), (3, 'Abandono del Empleo'), (4, 'Defunci\xf3n'), (5, 'Ausentismo'), (6, 'Rescisi\xf3n de Contrato'), (7, 'Pensionado'), (8, 'Otra')], default=1, verbose_name='Motivo de Baja*')),
                ('reason', models.CharField(blank=True, max_length=4096, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Motivo')),
                ('severance_pay', models.FloatField(null=True, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='Liquidaci\xf3n*')),
                ('observations', tinymce.models.HTMLField(blank=True, max_length=4096, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Observaciones')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado*')),
            ],
            options={
                'verbose_name': 'Baja de Empleado',
                'verbose_name_plural': 'Bajas de Empleados',
            },
        ),
        migrations.CreateModel(
            name='EmployeeEarningsDeductions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammount', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Monto*')),
                ('date', models.DateField(verbose_name='Fecha*')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.EarningsDeductions', verbose_name='Concepto*')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Deducciones y Percepciones por Empleado',
                'verbose_name_plural': 'Deducciones y Percepciones por Empleado',
            },
        ),
        migrations.CreateModel(
            name='EmployeeEarningsDeductionsbyPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammount', models.DecimalField(decimal_places=2, default=0, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='Monto')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.EarningsDeductions', verbose_name='Conceptos')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Deducciones y Percepciones por Periodo',
                'verbose_name_plural': 'Deducciones y Percepciones por Periodo',
            },
        ),
        migrations.CreateModel(
            name='EmployeeFinancialData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(default=0, max_length=20, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='N\xfamero de Cuenta*')),
                ('CLABE', models.CharField(default=0, max_length=40, validators=[django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='Clave Interbancaria (CLABE)*')),
                ('monthly_salary', models.DecimalField(decimal_places=2, max_digits=20, null=True, verbose_name='Salario Mensual*')),
                ('daily_salary', models.DecimalField(decimal_places=2, max_digits=20, null=True, verbose_name='Salario Diario*')),
                ('aggregate_daily_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Salario Diario Acumulado')),
                ('payment_method', models.CharField(choices=[('D', 'Deposito'), ('E', 'Efectivo'), ('T', 'Transferencia Interbancaria')], default='D', max_length=1, verbose_name='Forma de Pago*')),
                ('comments', models.TextField(blank=True, max_length=500, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Observaciones')),
                ('account_type', models.CharField(choices=[('P', 'Principal'), ('S', 'Secundaria')], default='P', max_length=1, verbose_name='Tipo de Cuenta')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.SATBank', verbose_name='Banco*')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Datos Financieros del Empleado',
                'verbose_name_plural': 'Datos Financieros del Empleado',
            },
        ),
        migrations.CreateModel(
            name='EmployeeHasTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Etiquetas del Empleado',
                'verbose_name_plural': 'Etiquetas del Empleado',
            },
        ),
        migrations.CreateModel(
            name='EmployeeLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0, verbose_name='Cantidad')),
                ('payment_plan', models.IntegerField(choices=[(1, 'Plan A (12 periodos)'), (2, 'Plan B (14 periodos)')], default=1, verbose_name='Plan de Pago')),
                ('request_date', models.DateField(null=True, verbose_name='Fecha de Solicitud')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Pr\xe9stamo',
                'verbose_name_plural': 'Pr\xe9stamos',
            },
        ),
        migrations.CreateModel(
            name='EmployeeLoanDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_number', models.IntegerField(default=1, verbose_name='N\xfamero de Pago')),
                ('pay_status', models.BooleanField(default=False, verbose_name='Estatus de Pago')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='Cantidad')),
                ('deduction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.EmployeeEarningsDeductionsbyPeriod', verbose_name='Deduction')),
                ('employeeloan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.EmployeeLoan', verbose_name='Pr\xe9stamo')),
            ],
            options={
                'verbose_name': 'Pr\xe9stamo Detalle',
                'verbose_name_plural': 'Pr\xe9stamos Detalle',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollPeriodExclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePositionDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio*')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Termino')),
                ('physical_location', models.CharField(blank=True, max_length=250, verbose_name='Ubicaci\xf3n F\xedsica')),
                ('entry_time', models.TimeField(null=True, verbose_name='Hora de Entrada*')),
                ('departure_time', models.TimeField(null=True, verbose_name='Hora de Salida*')),
                ('observations', models.CharField(max_length=500, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Observaciones*')),
                ('monday', models.BooleanField(default=True, verbose_name='Lunes')),
                ('tuesday', models.BooleanField(default=True, verbose_name='Martes')),
                ('wednesday', models.BooleanField(default=True, verbose_name='Mi\xe9rcoles')),
                ('thursday', models.BooleanField(default=True, verbose_name='Jueves')),
                ('friday', models.BooleanField(default=True, verbose_name='Viernes')),
                ('saturday', models.BooleanField(default=True, verbose_name='S\xe1bado')),
                ('sunday', models.BooleanField(default=False, verbose_name='Domingo')),
                ('contract', models.CharField(max_length=45, verbose_name='Contrato*')),
                ('area', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='subdirection', chained_model_field='subdirection', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Area', verbose_name='\xc1rea*')),
                ('department', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='area', chained_model_field='area', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Department', verbose_name='Departamento*')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Direction', verbose_name='Empresa/Proyecto*')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Descripci\xf3n de Puesto del Empleado',
                'verbose_name_plural': 'Descripci\xf3n de Puesto del Empleado',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=256, verbose_name='Descripci\xf3n')),
                ('vacancy_number', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='N\xfamero de Vacantes')),
                ('minimum_requirements', tinymce.models.HTMLField(blank=True, max_length=4096, null=True, verbose_name='Requisitos M\xednimos')),
                ('characteristics', tinymce.models.HTMLField(blank=True, max_length=4096, null=True, verbose_name='Caracter\xedsticas del Puesto')),
                ('reason', tinymce.models.HTMLField(blank=True, max_length=4096, null=True, verbose_name='Raz\xf3n')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Area', verbose_name='\xc1rea')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Department', verbose_name='Departamento')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Direction', verbose_name='Direcci\xf3n')),
            ],
            options={
                'verbose_name': 'Requisici\xf3n de Personal',
                'verbose_name_plural': 'Requisiciones de Personal',
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
                ('first_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Paterno*')),
                ('second_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Materno*')),
                ('relationship', models.CharField(blank=True, max_length=128, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Parentesco')),
                ('career', models.CharField(blank=True, max_length=128, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Profesi\xf3n')),
                ('age', models.IntegerField(blank=True, default=0, null=True, verbose_name='Edad')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='N\xfamero de Tel\xe9fono')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado*')),
            ],
            options={
                'verbose_name': 'Familiar',
                'verbose_name_plural': 'Familiares',
            },
        ),
        migrations.CreateModel(
            name='InfonavitData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infonavit_credit_number', models.CharField(max_length=30, verbose_name='N\xfamero de Cr\xe9dito*')),
                ('discount_type', models.CharField(max_length=30, verbose_name='Tipo de Descuento*')),
                ('discount_amount', models.CharField(max_length=30, verbose_name='Monto de Descuento*')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio*')),
                ('credit_term', models.CharField(max_length=200, verbose_name='Duraci\xf3n de Cr\xe9dito*')),
                ('comments', models.TextField(blank=True, max_length=500, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Observaciones')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Datos del Infonavit del Empleado',
                'verbose_name_plural': 'Datos del Infonavit del Empleado',
            },
        ),
        migrations.CreateModel(
            name='ISRTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lower_limit', models.FloatField(default=0, verbose_name='L\xedmite Inferior')),
                ('upper_limit', models.FloatField(default=0, verbose_name='L\xedmite Superior')),
                ('fixed_fee', models.FloatField(default=0, verbose_name='Cuota Fija')),
                ('rate', models.FloatField(default=0, verbose_name='Tasa Aplicable')),
            ],
            options={
                'verbose_name': 'Tabla de ISR',
                'verbose_name_plural': 'Tabla de ISR',
            },
        ),
        migrations.CreateModel(
            name='JobInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Vacante de Empleos',
                'verbose_name_plural': 'Vacante de Puesto',
            },
        ),
        migrations.CreateModel(
            name='JobProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(max_length=2048, verbose_name='Puesto')),
                ('abilities', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Habilidades')),
                ('aptitudes', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Aptitudes')),
                ('knowledge', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Conocimientos')),
                ('competitions', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Competencias')),
                ('scholarship', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Escolaridad ')),
                ('experience', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Experiencia')),
                ('jobdescription', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Descripci\xf3n del Puesto ')),
                ('minimumrequirements', tinymce.models.HTMLField(blank=True, max_length=2048, verbose_name='Requisitos M\xednimos del Puesto')),
                ('entry_time', models.TimeField(verbose_name='Horario de Entrada')),
                ('exit_time', models.TimeField(verbose_name='Horario de Salida')),
                ('sunday', models.BooleanField(default=False, verbose_name='Domingo')),
                ('monday', models.BooleanField(default=True, verbose_name='Lunes')),
                ('tuesday', models.BooleanField(default=True, verbose_name='Martes')),
                ('wednesday', models.BooleanField(default=True, verbose_name='Mi\xe9rcoles')),
                ('thursday', models.BooleanField(default=True, verbose_name='Jueves')),
                ('friday', models.BooleanField(default=True, verbose_name='Viernes')),
                ('saturday', models.BooleanField(default=True, verbose_name='S\xe1bado')),
                ('minimumsalary', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, null=True, verbose_name='Salario M\xednimo')),
                ('maximumsalary', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, null=True, verbose_name='Salario M\xe1ximo')),
                ('area', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='subdirection', chained_model_field='subdirection', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Area', verbose_name='\xc1rea*')),
                ('department', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='area', chained_model_field='area', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Department', verbose_name='Departamento*')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Direction', verbose_name='Direcci\xf3n')),
            ],
            options={
                'verbose_name': 'Perfil de Puesto',
                'verbose_name_plural': 'Perfiles de Puesto',
            },
        ),
        migrations.CreateModel(
            name='PayrollClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Clasificaci\xf3n de N\xf3mina',
                'verbose_name_plural': 'Clasificaci\xf3n de N\xf3mina',
            },
        ),
        migrations.CreateModel(
            name='PayrollGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
                ('checker_type', models.IntegerField(choices=[(1, 'Autom\xe1tico'), (2, 'Manual')], default=1, verbose_name='Tipo de Checador*')),
                ('direction', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Direction', verbose_name='Direcci\xf3n*')),
                ('internal_company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.InternalCompany', verbose_name='Empresa*')),
                ('payroll_classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollClassification', verbose_name='Clasificaci\xf3n de N\xf3mina*')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ERP.Project', verbose_name='Proyecto')),
            ],
            options={
                'verbose_name': 'Grupo de N\xf3mina',
                'verbose_name_plural': 'Grupo de N\xf3mina',
            },
        ),
        migrations.CreateModel(
            name='PayrollPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Nombre')),
                ('month', models.IntegerField(choices=[(1, 'Enero'), (2, 'Febrero'), (3, 'Marzo'), (4, 'Abril'), (5, 'Mayo'), (6, 'Junio'), (7, 'Julio'), (8, 'Agosto'), (9, 'Septiembre'), (10, 'Octubre'), (11, 'Noviembre'), (12, 'Diciembre')], default=1, verbose_name='Mes')),
                ('year', models.IntegerField(default=2017, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(2017), django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='A\xf1o*')),
                ('fortnight', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(1), django.core.validators.RegexValidator(message='Este campo solo acepta n\xfameros.', regex='[0-9]')], verbose_name='Semana*')),
                ('start_period', models.DateField(verbose_name='Inicio de Periodo*')),
                ('end_period', models.DateField(verbose_name='Fin de Periodo*')),
                ('exclusions', models.ManyToManyField(through='HumanResources.EmployeePayrollPeriodExclusion', to='HumanResources.Employee')),
                ('payroll_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollGroup', verbose_name='Grupo de N\xf3mina')),
            ],
            options={
                'verbose_name': 'Periodos de N\xf3mina',
                'verbose_name_plural': 'Periodos de N\xf3mina',
            },
        ),
        migrations.CreateModel(
            name='PayrollProcessedDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nombre')),
                ('percent_taxable', models.IntegerField(blank=True, null=True, verbose_name='Porcentaje Gravable')),
                ('sat_key', models.CharField(blank=True, max_length=30, null=True, verbose_name='Clave SAT')),
                ('law_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de Ley')),
                ('status', models.CharField(blank=True, max_length=64, null=True, verbose_name='Estatus')),
                ('accounting_account', models.IntegerField(blank=True, null=True, verbose_name='Cuenta Contable')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observaciones')),
                ('type', models.CharField(max_length=64, verbose_name='Tipo')),
                ('taxable', models.CharField(max_length=64, verbose_name='Gravable')),
                ('category', models.CharField(max_length=64, verbose_name='Categoria')),
                ('amount', models.FloatField(verbose_name='Monto')),
            ],
            options={
                'verbose_name': 'Detalle de N\xf3mina Procesada',
                'verbose_name_plural': 'Detalle de N\xf3mina Procesada',
            },
        ),
        migrations.CreateModel(
            name='PayrollReceiptProcessed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worked_days', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='D\xedas Trabajados')),
                ('total_perceptions', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total de Percepciones')),
                ('total_deductions', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total de Deducciones')),
                ('total_payroll', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total Neto')),
                ('taxed', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Grabado')),
                ('exempt', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Excento')),
                ('daily_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Salario Diario')),
                ('total_withholdings', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Total de Deducciones')),
                ('total_discounts', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Total de Descuentos')),
                ('printed_receipt', models.CharField(choices=[('Y', 'Si'), ('N', 'No')], default='Y', max_length=1)),
                ('stamp_version', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Versi\xf3n de Timbrado')),
                ('stamp_UUID', models.CharField(blank=True, max_length=500, null=True, verbose_name='UUID de Timbrado')),
                ('stamp_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Timbrado')),
                ('stamp_CFDI', models.CharField(blank=True, max_length=500, null=True, verbose_name='CFDI Timbrado')),
                ('sat_certificate', models.CharField(blank=True, max_length=500, null=True, verbose_name='Certificado del SAT')),
                ('stamp_sat', models.CharField(blank=True, max_length=500, null=True, verbose_name='Timbrado del SAT')),
                ('stamp_xml', models.CharField(blank=True, max_length=500, null=True, verbose_name='XML del Timbrado')),
                ('stamp_serie_id', models.CharField(blank=True, max_length=500, null=True, verbose_name='Serie ID  de Timbrado')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Pago')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
                ('payroll_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de N\xf3mina')),
            ],
            options={
                'verbose_name': 'Recibo de N\xf3mina Procesada',
                'verbose_name_plural': 'Recibo de N\xf3mina Procesada',
            },
        ),
        migrations.CreateModel(
            name='PayrollToProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'N\xf3mina a Procesar',
                'verbose_name_plural': 'N\xf3mina a Procesar',
            },
        ),
        migrations.CreateModel(
            name='PayrollType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
            ],
            options={
                'verbose_name': 'Tipos de N\xf3mina',
                'verbose_name_plural': 'Tipo de N\xf3mina',
            },
        ),
        migrations.CreateModel(
            name='Periodicity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Nombre')),
                ('total_payments', models.IntegerField(verbose_name='Numero de pagos')),
            ],
            options={
                'verbose_name': 'Periodicidad',
                'verbose_name_plural': 'Periodicidad',
            },
        ),
        migrations.CreateModel(
            name='Subdirection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Subdirecci\xf3n')),
                ('direction', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Direction', verbose_name='Direcci\xf3n*')),
            ],
            options={
                'verbose_name': 'Subdirecci\xf3n',
                'verbose_name_plural': 'Subdirecciones',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Nombre de la Etiqueta')),
            ],
            options={
                'verbose_name': 'Etiqueta',
                'verbose_name_plural': 'Etiquetas',
            },
        ),
        migrations.CreateModel(
            name='TaxRegime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='R\xe9gimen Fiscal')),
            ],
            options={
                'verbose_name': 'R\xe9gimen Fiscal',
                'verbose_name_plural': 'Reg\xedmenes Fiscales',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=512, verbose_name='Clave de la Prueba')),
                ('name', models.CharField(max_length=512, verbose_name='Nombre de la Prueba')),
                ('notes', models.CharField(max_length=1024, verbose_name='Notas')),
            ],
            options={
                'verbose_name': 'Pruebas a Empleados',
                'verbose_name_plural': 'Pruebas a Empleados',
            },
        ),
        migrations.CreateModel(
            name='TestApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateField(verbose_name='Fecha de Aplicaci\xf3n*')),
                ('result', models.CharField(max_length=512, verbose_name='Resultado*')),
                ('comments', models.CharField(blank=True, max_length=2048, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Comentarios')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Test', verbose_name='Prueba*')),
            ],
            options={
                'verbose_name': 'Aplicaci\xf3n de Prueba del Empleado',
                'verbose_name_plural': 'Aplicaciones de Pruebas del Empleado',
            },
        ),
        migrations.CreateModel(
            name='UploadedEmployeeAssistanceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assistance_file', models.FileField(null=True, upload_to=HumanResources.models.uploaded_employees_assistance_destination, verbose_name='Archivo de Asistencias')),
                ('payroll_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de n\xf3mina')),
            ],
            options={
                'verbose_name': 'Archivo de asistencias',
                'verbose_name_plural': 'Archivos de Asistencias',
            },
        ),
        migrations.CreateModel(
            name='WorkReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Nombre*')),
                ('first_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Paterno*')),
                ('second_last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Tu nombre no es correcto.', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Apellido Materno*')),
                ('company_name', models.CharField(max_length=255, verbose_name='Empresa*')),
                ('first_phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='N\xfamero de Tel\xe9fono #1')),
                ('second_phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Asegurate de que el numero de telefono que proporcionas sea correcto.', regex='^\\+?1?\\d{9,15}$')], verbose_name='N\xfamero de Tel\xe9fono #2')),
                ('email', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Tu correo electr\xf3nico no es correcto.', regex="\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*")], verbose_name='Correo Electr\xf3nico')),
                ('notes', models.CharField(max_length=2048, null=True, validators=[django.core.validators.RegexValidator(message='\xc9ste campo no acepta caracateres como: +*/{] .', regex="[a-zA-Z\xe0\xe1\xe2\xe4\xe3\xe5\u0105\u010d\u0107\u0119\xe8\xe9\xea\xeb\u0117\u012f\xec\xed\xee\xef\u0142\u0144\xf2\xf3\xf4\xf6\xf5\xf8\xf9\xfa\xfb\xfc\u0173\u016b\xff\xfd\u017c\u017a\xf1\xe7\u010d\u0161\u017e\xc0\xc1\xc2\xc4\xc3\xc5\u0104\u0106\u010c\u0116\u0118\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\u012e\u0141\u0143\xd2\xd3\xd4\xd6\xd5\xd8\xd9\xda\xdb\xdc\u0172\u016a\u0178\xdd\u017b\u0179\xd1\xdf\xc7\u0152\xc6\u010c\u0160\u017d\u2202\xf0 ,.'-]")], verbose_name='Notas')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado*')),
            ],
            options={
                'verbose_name': 'Referencia Laboral',
                'verbose_name_plural': 'Referencias Laborales',
            },
        ),
        migrations.AddField(
            model_name='payrolltoprocess',
            name='payroll_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollType', verbose_name='Tipo de N\xf3mina'),
        ),
        migrations.AddField(
            model_name='payrollprocesseddetail',
            name='payroll_receip_processed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollReceiptProcessed', verbose_name='Recibo de N\xf3mina Procesado'),
        ),
        migrations.AddField(
            model_name='payrollperiod',
            name='payroll_to_process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollToProcess', verbose_name='N\xf3mina a procesar'),
        ),
        migrations.AddField(
            model_name='payrollperiod',
            name='periodicity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Periodicity', verbose_name='Periodicidad'),
        ),
        migrations.AddField(
            model_name='jobprofile',
            name='subdirection',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='direction', chained_model_field='direction', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Subdirection', verbose_name='Subdirecci\xf3n*'),
        ),
        migrations.AddField(
            model_name='jobinstance',
            name='job_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.JobProfile', verbose_name='Perfil de Empleo'),
        ),
        migrations.AddField(
            model_name='jobinstance',
            name='parent_job_instance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.JobInstance', verbose_name='Jefe Inmediato'),
        ),
        migrations.AddField(
            model_name='employeerequisition',
            name='subdirection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Subdirection', verbose_name='Subdirecci\xf3n'),
        ),
        migrations.AddField(
            model_name='employeerequisition',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Solicitado por:'),
        ),
        migrations.AddField(
            model_name='employeepositiondescription',
            name='job_profile',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='department', chained_model_field='department', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.JobProfile', verbose_name='Puesto*'),
        ),
        migrations.AddField(
            model_name='employeepositiondescription',
            name='payroll_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollGroup', verbose_name='Grupo de N\xf3mina*'),
        ),
        migrations.AddField(
            model_name='employeepositiondescription',
            name='subdirection',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='direction', chained_model_field='direction', on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Subdirection', verbose_name='Subdirecci\xf3n*'),
        ),
        migrations.AddField(
            model_name='employeepayrollperiodexclusion',
            name='payroll_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de N\xf3mina'),
        ),
        migrations.AddField(
            model_name='employeeloandetail',
            name='payroll_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollGroup', verbose_name='Grupo'),
        ),
        migrations.AddField(
            model_name='employeeloandetail',
            name='period',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='payroll_group', chained_model_field='payroll_group', null=True, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo'),
        ),
        migrations.AddField(
            model_name='employeehastag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Tag', verbose_name='Etiqueta'),
        ),
        migrations.AddField(
            model_name='employeeearningsdeductionsbyperiod',
            name='payroll_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de N\xf3mina'),
        ),
        migrations.AddField(
            model_name='employeeassistance',
            name='payroll_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de n\xf3mina'),
        ),
        migrations.AddField(
            model_name='employee',
            name='tags',
            field=models.ManyToManyField(through='HumanResources.EmployeeHasTag', to='HumanResources.Tag', verbose_name='Etiquetas'),
        ),
        migrations.AddField(
            model_name='employee',
            name='tax_regime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.TaxRegime', verbose_name='R\xe9gimen Fiscal*'),
        ),
        migrations.AddField(
            model_name='employee',
            name='tests',
            field=models.ManyToManyField(through='HumanResources.TestApplication', to='HumanResources.Test', verbose_name='Pruebas'),
        ),
        migrations.AddField(
            model_name='employee',
            name='town',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='state', chained_model_field='estado', on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Municipio', verbose_name='Municipio*'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='state',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='country', chained_model_field='pais', on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Estado', verbose_name='Estado'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='town',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='state', chained_model_field='estado', on_delete=django.db.models.deletion.CASCADE, to='SharedCatalogs.Municipio', verbose_name='Municipio'),
        ),
        migrations.AddField(
            model_name='education',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado\xa1'),
        ),
        migrations.AddField(
            model_name='earningdeductionperiod',
            name='employee_earnings_deductions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.EmployeeEarningsDeductions', verbose_name='Deducci\xf3n/Percepci\xf3n'),
        ),
        migrations.AddField(
            model_name='earningdeductionperiod',
            name='payroll_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de N\xf3mina'),
        ),
        migrations.AddField(
            model_name='currenteducation',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado*'),
        ),
        migrations.AddField(
            model_name='checkerdata',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado'),
        ),
        migrations.AddField(
            model_name='area',
            name='subdirection',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Subdirection', verbose_name='Subdirecci\xf3n'),
        ),
        migrations.AddField(
            model_name='accesstodirection',
            name='direction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Direction', verbose_name='Direcci\xf3n*'),
        ),
        migrations.AddField(
            model_name='accesstodirection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='absenceproof',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.Employee', verbose_name='Empleado'),
        ),
        migrations.AddField(
            model_name='absenceproof',
            name='payroll_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HumanResources.PayrollPeriod', verbose_name='Periodo de n\xf3mina'),
        ),
        migrations.AlterUniqueTogether(
            name='subdirection',
            unique_together=set([('direction', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='payrollreceiptprocessed',
            unique_together=set([('payroll_period', 'employee')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeepayrollperiodexclusion',
            unique_together=set([('employee', 'payroll_period')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeehastag',
            unique_together=set([('employee', 'tag')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeeearningsdeductions',
            unique_together=set([('concept', 'employee')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeeassistance',
            unique_together=set([('employee', 'payroll_period', 'record_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='direction',
            unique_together=set([('internal_company', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together=set([('area', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='area',
            unique_together=set([('subdirection', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='accesstodirection',
            unique_together=set([('user', 'direction')]),
        ),
    ]
